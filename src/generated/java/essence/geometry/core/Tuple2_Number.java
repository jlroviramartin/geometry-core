/*
 * <auto-generated>
 *     This code was generated by a tool.
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 * </auto-generated>
 *
 * Copyright (C) 2018 joseluis.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301  USA
 */
package essence.geometry.core;

/**
 * A {@code Tuple2_Number} is a 2 dimensional collection of values of type numeric.
 */
public interface Tuple2_Number {

    /**
     * This method sets the values of {@code this} tuple into {@code buff}.
     *
     * @param buff Where to put the values.
     */
    void getInto(Tuple2_Number buff);

    /**
     * This method sets the value all components as double values.
     *
     * @param x Value of the X component.
     * @param y Value of the Y component.
     */
    void setDouble(double x, double y);

    /**
     * This method sets the value all components as float values.
     *
     * @param x Value of the X component.
     * @param y Value of the Y component.
     */
    void setFloat(float x, float y);

    /**
     * This method sets the value all components as long values.
     *
     * @param x Value of the X component.
     * @param y Value of the Y component.
     */
    void setLong(long x, long y);

    /**
     * This method sets the value all components as int values.
     *
     * @param x Value of the X component.
     * @param y Value of the Y component.
     */
    void setInteger(int x, int y);

    /**
     * This method sets the value all components as short values.
     *
     * @param x Value of the X component.
     * @param y Value of the Y component.
     */
    void setShort(short x, short y);

    /**
     * This method sets the value all components as byte values.
     *
     * @param x Value of the X component.
     * @param y Value of the Y component.
     */
    void setByte(byte x, byte y);
}

