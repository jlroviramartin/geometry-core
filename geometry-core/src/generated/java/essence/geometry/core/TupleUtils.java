/*
 * <auto-generated>
 *     This code was generated by a tool.
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 * </auto-generated>
 *
 * Copyright (C) 2018 joseluis.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301  USA
 */
package essence.geometry.core;

import essence.geometry.core.floats.Tuple2_Float;
import essence.geometry.core.floats.BuffTuple2f;
import essence.geometry.core.doubles.Tuple2_Double;
import essence.geometry.core.doubles.BuffTuple2d;
import essence.geometry.core.floats.Tuple3_Float;
import essence.geometry.core.floats.BuffTuple3f;
import essence.geometry.core.doubles.Tuple3_Double;
import essence.geometry.core.doubles.BuffTuple3d;
import essence.geometry.core.floats.Tuple4_Float;
import essence.geometry.core.floats.BuffTuple4f;
import essence.geometry.core.doubles.Tuple4_Double;
import essence.geometry.core.doubles.BuffTuple4d;
import essence.geometry.core.integers.Tuple2_Integer;
import essence.geometry.core.integers.BuffTuple2i;
import essence.geometry.core.bytes.Tuple3_Byte;
import essence.geometry.core.bytes.BuffTuple3b;
import essence.geometry.core.bytes.Tuple4_Byte;
import essence.geometry.core.bytes.BuffTuple4b;

public class TupleUtils {

    /**
     * This method converts a Tuple into a Tuple2_Float. It is a helper method to ease the operations.
     *
     * @param other Tuple.
     * @return Tuple2_Float.
     */
    public static Tuple2_Float toTuple2_Float(Tuple other) {
        if (other instanceof Tuple2_Float) {
            return (Tuple2_Float)other;
        }

        BuffTuple2f aux = new BuffTuple2f();
        if (other instanceof Tuple2_Number) {
            ((Tuple2_Number)other).getInto(aux);
        } else {
            aux.set(other);
        }

        return aux;
    }

    /**
     * This method converts a Tuple into a Tuple2_Double. It is a helper method to ease the operations.
     *
     * @param other Tuple.
     * @return Tuple2_Double.
     */
    public static Tuple2_Double toTuple2_Double(Tuple other) {
        if (other instanceof Tuple2_Double) {
            return (Tuple2_Double)other;
        }

        BuffTuple2d aux = new BuffTuple2d();
        if (other instanceof Tuple2_Number) {
            ((Tuple2_Number)other).getInto(aux);
        } else {
            aux.set(other);
        }

        return aux;
    }

    /**
     * This method converts a Tuple into a Tuple3_Float. It is a helper method to ease the operations.
     *
     * @param other Tuple.
     * @return Tuple3_Float.
     */
    public static Tuple3_Float toTuple3_Float(Tuple other) {
        if (other instanceof Tuple3_Float) {
            return (Tuple3_Float)other;
        }

        BuffTuple3f aux = new BuffTuple3f();
        if (other instanceof Tuple3_Number) {
            ((Tuple3_Number)other).getInto(aux);
        } else {
            aux.set(other);
        }

        return aux;
    }

    /**
     * This method converts a Tuple into a Tuple3_Double. It is a helper method to ease the operations.
     *
     * @param other Tuple.
     * @return Tuple3_Double.
     */
    public static Tuple3_Double toTuple3_Double(Tuple other) {
        if (other instanceof Tuple3_Double) {
            return (Tuple3_Double)other;
        }

        BuffTuple3d aux = new BuffTuple3d();
        if (other instanceof Tuple3_Number) {
            ((Tuple3_Number)other).getInto(aux);
        } else {
            aux.set(other);
        }

        return aux;
    }

    /**
     * This method converts a Tuple into a Tuple4_Float. It is a helper method to ease the operations.
     *
     * @param other Tuple.
     * @return Tuple4_Float.
     */
    public static Tuple4_Float toTuple4_Float(Tuple other) {
        if (other instanceof Tuple4_Float) {
            return (Tuple4_Float)other;
        }

        BuffTuple4f aux = new BuffTuple4f();
        if (other instanceof Tuple4_Number) {
            ((Tuple4_Number)other).getInto(aux);
        } else {
            aux.set(other);
        }

        return aux;
    }

    /**
     * This method converts a Tuple into a Tuple4_Double. It is a helper method to ease the operations.
     *
     * @param other Tuple.
     * @return Tuple4_Double.
     */
    public static Tuple4_Double toTuple4_Double(Tuple other) {
        if (other instanceof Tuple4_Double) {
            return (Tuple4_Double)other;
        }

        BuffTuple4d aux = new BuffTuple4d();
        if (other instanceof Tuple4_Number) {
            ((Tuple4_Number)other).getInto(aux);
        } else {
            aux.set(other);
        }

        return aux;
    }

    /**
     * This method converts a Tuple into a Tuple2_Integer. It is a helper method to ease the operations.
     *
     * @param other Tuple.
     * @return Tuple2_Integer.
     */
    public static Tuple2_Integer toTuple2_Integer(Tuple other) {
        if (other instanceof Tuple2_Integer) {
            return (Tuple2_Integer)other;
        }

        BuffTuple2i aux = new BuffTuple2i();
        if (other instanceof Tuple2_Number) {
            ((Tuple2_Number)other).getInto(aux);
        } else {
            aux.set(other);
        }

        return aux;
    }

    /**
     * This method converts a Tuple into a Tuple3_Byte. It is a helper method to ease the operations.
     *
     * @param other Tuple.
     * @return Tuple3_Byte.
     */
    public static Tuple3_Byte toTuple3_Byte(Tuple other) {
        if (other instanceof Tuple3_Byte) {
            return (Tuple3_Byte)other;
        }

        BuffTuple3b aux = new BuffTuple3b();
        if (other instanceof Tuple3_Number) {
            ((Tuple3_Number)other).getInto(aux);
        } else {
            aux.set(other);
        }

        return aux;
    }

    /**
     * This method converts a Tuple into a Tuple4_Byte. It is a helper method to ease the operations.
     *
     * @param other Tuple.
     * @return Tuple4_Byte.
     */
    public static Tuple4_Byte toTuple4_Byte(Tuple other) {
        if (other instanceof Tuple4_Byte) {
            return (Tuple4_Byte)other;
        }

        BuffTuple4b aux = new BuffTuple4b();
        if (other instanceof Tuple4_Number) {
            ((Tuple4_Number)other).getInto(aux);
        } else {
            aux.set(other);
        }

        return aux;
    }
}
