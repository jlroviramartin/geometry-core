/*
 * <auto-generated>
 *     This code was generated by a tool.
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 * </auto-generated>
 *
 * Copyright (C) 2018 joseluis.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301  USA
 */
package essence.geometry.core.floats;

import essence.geometry.core.Tuple;
import essence.geometry.core.BuffColor4;

/**
 * Basic implementation of a 4 dimension color.
 */
public class BuffColor4f extends BuffTuple4f implements BuffColor4 {

    /**
     * Empty constructor.
     */
    public BuffColor4f() {
    }

    /**
     * This constructor sets the components of this color.
     *
     * @param x Value of the component X.
     * @param y Value of the component Y.
     * @param z Value of the component Z.
     * @param w Value of the component W.
     */
    public BuffColor4f(float x, float y, float z, float w) {
        super(x, y, z, w);
    }

    /**
     * Copy constructor.
     *
     * @param tuple Tuple.
     */
    public BuffColor4f(Tuple tuple) {
        super(tuple);
    }

    /**
     * Zero color.
     */
    public static final BuffColor4f getZero() {
        return new BuffColor4f((float)0, (float)0, (float)0, (float)0);
    }

    /**
     * One color.
     */
    public static final BuffColor4f getOne() {
        return new BuffColor4f((float)1, (float)1, (float)1, (float)1);
    }

//<editor-fold defaultstate="collapsed" desc="Object">
    @Override
    public BuffColor4f clone() throws CloneNotSupportedException {
        return (BuffColor4f)super.clone();
    }
//</editor-fold>

//<editor-fold defaultstate="collapsed" desc="private">
//</editor-fold>
}
