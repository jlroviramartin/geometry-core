{#
 # This macro renders all properties using row and column separator.
 #}
{%  macro RowsAndColumns( desc, rseparator, cseparator, macroItem ) %}
{%      for row in desc.rows %}
{%          if not (loop.first) %}{{ rseparator | nl }}{% endif %}
{%          for property in row.cols %}
{%              if not (loop.first) %}{{ cseparator | nl }}{% endif %}
{{ dynamic( macroItem, [desc, property] ) | nl }}
{%          endfor %}
{%      endfor %}
{%  endmacro %}

{#
 # This macro renders all properties using row and column separator.
 #}
{%  macro ColumnsAndRows( desc, cseparator, rseparator, macroItem ) %}
{%      for col in desc.cols %}
{%          if not (loop.first) %}{{ cseparator | nl }}{% endif %}
{%          for property in col.rows %}
{%              if not (loop.first) %}{{ rseparator | nl }}{% endif %}
{{ dynamic( macroItem, [desc, property] ) | nl }}
{%          endfor %}
{%      endfor %}
{%  endmacro %}

{#
 # This macro renders the type and name of all properties.
 #}
{%  macro TypeNameCommaSeparated( desc ) %}
{%      dynmacro TypeNameCommaSeparated_anonymous( desc, property ) %}
{{ property.type }} {{ property.name }}
{%      enddynmacro %}
{{ RowsAndColumns( desc, ",%n", ", ", TypeNameCommaSeparated_anonymous ) }}
{%  endmacro %}

{#
 # This macro renders the name of all properties.
 #}
{%  macro NameCommaSeparated( desc ) %}
{%      dynmacro NameCommaSeparated_anonymous( desc, property ) %}
{{ property.name }}
{%      enddynmacro %}
{{ RowsAndColumns( desc, ",%n", ", ", NameCommaSeparated_anonymous ) }}
{%  endmacro %}

