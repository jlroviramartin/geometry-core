{#
 # This template renders a tupe.
 #}
{%  import "pebble/Tuple.Core.pebble" %}
/*
 * <auto-generated>
 *     This code was generated by a tool.
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 * </auto-generated>
 *
 * Copyright (C) 2018 joseluis.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301  USA
 */
package {{ desc._package }};

/**
 * A {@code {{ desc.tupleNumberName }}} is a {{ desc.dim }} dimensional collection of values of type numeric.
 */
public interface {{ desc.tupleNumberName }} {

    /**
     * This method sets the values of {@code this} tuple into {@code buff}.
     *
     * @param buff Where to put the values.
     */
    void getInto({{ desc.tupleNumberName }} buff);

{{ Setter( desc, "double", "Double" ) }}

{{ Setter( desc, "float", "Float" ) }}

{{ Setter( desc, "long", "Long" ) }}

{{ Setter( desc, "int", "Integer" ) }}

{{ Setter( desc, "short", "Short" ) }}

{{ Setter( desc, "byte", "Byte" ) }}
}

{%  macro Setter( desc, type, ctype ) %}
    /**
     * This method sets the value all components as {{ type }} values.
     *
{%      for property in desc.properties %}
     * @param {{ property.name }} Value of the {{ property.upperName }} component.
{%      endfor %}
     */
    void set{{ ctype }}({{ FixedTypeNameCommaSeparated(desc, type) }});
{%  endmacro %}
