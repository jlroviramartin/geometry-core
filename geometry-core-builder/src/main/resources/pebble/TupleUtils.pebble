{%  extends "pebble/Base.pebble" %}

{#
 # This template renders a tuple utils class.
 #}

{%  import "pebble/Tuple.Core.pebble" %}

{%  block package %}{{ desc._package }}{% endblock %}

{%  block import %}
{%      for vdesc in desc.descriptors %}
import {{ vdesc._package }}.{{ vdesc.tupleTypeName }};
import {{ vdesc._package }}.{{ vdesc.buffTupleTypeName }};
import {{ vdesc._package }}.{{ vdesc.buffTupleImpName }};
{%      endfor %}
{%  endblock %}


{%  block content %}
public class TupleUtils {
{%      for vdesc in desc.descriptors %}

    /**
     * This method converts a Tuple into a {{ vdesc.tupleTypeName }}. It is a helper method to ease the operations.
     *
     * @param other Tuple.
     * @return {{ vdesc.tupleTypeName }}.
     */
    public static {{ vdesc.tupleTypeName }} to{{ vdesc.tupleTypeName }}(Tuple other) {
        if (other instanceof {{ vdesc.tupleTypeName }}) {
            return ({{ vdesc.tupleTypeName }})other;
        }

        {{ vdesc.buffTupleImpName }} aux = new {{ vdesc.buffTupleImpName }}();
        if (other instanceof {{ vdesc.tupleNumberName }}) {
            (({{ vdesc.tupleNumberName }})other).getInto(aux);
        }
        else {
            aux.set(other);
        }

        return aux;
    }

    /**
     * This method converts a Tuple into a {{ vdesc.buffTupleTypeName }}. It is a helper method to ease the operations.
     *
     * @param other Tuple.
     * @return {{ vdesc.buffTupleTypeName }}.
     */
    public static {{ vdesc.buffTupleTypeName }} to{{ vdesc.buffTupleTypeName }}(BuffTuple other) {
        if (other instanceof {{ vdesc.buffTupleTypeName }}) {
            return ({{ vdesc.buffTupleTypeName }})other;
        }

        if (other instanceof {{ vdesc.buffTupleNumberName }}) {
            return new {{ vdesc.buffTupleTypeName }}() {
                private final {{ vdesc.buffTupleNumberName }} inner = ({{ vdesc.buffTupleNumberName }})other;
                private final {{ vdesc.buffTupleImpName }} buff = new {{ vdesc.buffTupleImpName }}();

                @Override
                public void setAt(int index, {{ vdesc.type }} value) {
                    buff.setAt(index, value);
                    buff.getInto(inner);
                }
{%          for property in vdesc.properties %}

                @Override
                public void set{{property.upperName}}({{property.type}} value) {
                    buff.set{{property.upperName}}(value);
                    buff.getInto(inner);
                }
{%          endfor %}

                @Override
                public void set({{ TypeNameCommaSeparated( vdesc ) }}) {
                    buff.set({{ NameCommaSeparated( vdesc ) }});
                    buff.getInto(inner);
                }
        
                @Override
                public {{ vdesc.type }} getAt(int index)  {
                    return buff.getAt(index);
                }
{%          for property in vdesc.properties %}

                @Override
                public {{property.type}} get{{property.upperName}}() {
                    return buff.get{{property.upperName}}();
                }
{%          endfor %}

                @Override
                public void set(Tuple other) {
                    buff.set(other);
                    buff.getInto(inner);
                }

                @Override
                public int size() {
                    return {{ vdesc.dim }};
                }

                @Override
                public boolean epsilonEquals(Tuple other, double epsilon) {
                    return buff.epsilonEquals(other, epsilon);
                }
            };
        }

        return new {{ vdesc.buffTupleTypeName }}() {
            private final BuffTuple inner = other;
            private final {{ vdesc.buffTupleImpName }} buff = new {{ vdesc.buffTupleImpName }}();

            @Override
            public void setAt(int index, {{ vdesc.type }} value) {
                buff.setAt(index, value);
                inner.set(buff);
            }
{%          for property in vdesc.properties %}

            @Override
            public void set{{property.upperName}}({{property.type}} value) {
                buff.set{{property.upperName}}(value);
                inner.set(buff);
            }
{%          endfor %}

            @Override
            public void set({{ TypeNameCommaSeparated( vdesc ) }}) {
                buff.set({{ NameCommaSeparated( vdesc ) }});
                inner.set(buff);
            }

            @Override
            public {{ vdesc.type }} getAt(int index)  {
                return buff.getAt(index);
            }
{%          for property in vdesc.properties %}

            @Override
            public {{property.type}} get{{property.upperName}}() {
                return buff.get{{property.upperName}}();
            }
{%          endfor %}

            @Override
            public void set(Tuple other) {
                buff.set(other);
                inner.set(buff);
            }

            @Override
            public int size() {
                return {{ vdesc.dim }};
            }

            @Override
            public boolean epsilonEquals(Tuple other, double epsilon) {
                return buff.epsilonEquals(other, epsilon);
            }
        };
    }
{%      endfor %}
}
{%  endblock %}

