{%  macro MathAndSet( desc, className, vectorClassName ) %}
{{ SimpleMathAndSetImplementation_BinaryOperator( desc, className, desc.vectorName, desc.vectorImpName, desc.buffVectorImpName, "addAndSet", "+" ) }}

{{ SimpleMathAndSetImplementation_BinaryOperator( desc, className, desc.vectorName, desc.vectorImpName, desc.buffVectorImpName, "subAndSet", "-" ) }}

{{ LerpAndLinealAndSetImplementation( desc, className, desc.pointName, desc.pointImpName, desc.buffPointImpName )  }}

{#
    set(new {{ vectorClassName }}(this).vectorProjectionAndSet(where));
    return this;
#}
    @Override
    public {{ className }} vectorProjectionAndSet({{ desc.vectorName }} where) {
        if (where instanceof {{ desc.vectorImpName }}) {
            return vectorProjectionAndSet(({{ desc.vectorImpName }})where);
        } else if (where instanceof {{ desc.buffVectorImpName }}) {
            return vectorProjectionAndSet(({{ desc.buffVectorImpName }})where);
        } else {
            return vectorProjectionAndSet(new {{ desc.vectorImpName }}(where));
        }
    }

    public {{ className }} vectorProjectionAndSet({{ desc.vectorImpName }} where) {
        {{ VectorProjection(desc, "", "where.", "set") | indent(4) }}
        return this;
    }

    public {{ className }} vectorProjectionAndSet({{ desc.buffVectorImpName }} where) {
        {{ VectorProjection(desc, "", "where.", "set") | indent(4) }}
        return this;
    }
{%  endmacro %}
