{#
 # This macro renders the overwriting of Object methods of the tuple.
 #}
{%  macro Object( desc, className ) %}
    @Override
    public String toString() {
        VectorFormatInfo vfi = VectorFormatInfo.CURRENT_INFO;
{%      dynmacro Object_toString( desc, property ) %}
{{ property.name }}
{%-     enddynmacro %}
        return String.format(getFormat(), vfi.getBeg(), vfi.getSep(), vfi.getEnd(),
            {{ Properties( desc, ", ", Object_toString ) | indent(3)  }});
    }

    @Override
    public boolean equals(Object other) {
        if (other == this) {
            return true;
        }
        if (other instanceof {{ className }}) {
            {{ className }} _other = ({{ className }})other;
{%      dynmacro Object_equals1( desc, property ) %}
_other.{{ property.name }}
{%-     enddynmacro %}
            return equals({{ Properties( desc, ",%n", Object_equals1 ) | indent(4) }});
        }
        if (other instanceof Tuple) {
            {{ desc.tupleTypeName }} _other = TupleUtils.to{{ desc.tupleTypeName }}((Tuple)other);
{%      dynmacro Object_equals2( desc, property ) %}
_other.get{{ property.upperName }}()
{%-     enddynmacro %}
            return equals({{ Properties( desc, ",%n", Object_equals2 ) | indent(4) }});
        }
        return false;
    }

    @Override
    public int hashCode() {
        // https://stackoverflow.com/questions/113511/best-implementation-for-hashcode-method
        // http://www.jarvana.com/jarvana/view/org/apache/lucene/lucene-spatial/2.9.3/lucene-spatial-2.9.3-sources.jar!/org/apache/lucene/spatial/geometry/shape/Vector2D.java
        final int prime = 31;
        int hash = 1;
{%      for property in desc.properties %}
        hash = prime * hash + {{ desc.ctype }}.hashCode({{ property.name }});
{%      endfor %}
        return hash;
    }

    @Override
    public {{ className }} clone() throws CloneNotSupportedException {
        {{ className }} copy = ({{ className }})super.clone();
        return copy;
    }
{%  endmacro %}

